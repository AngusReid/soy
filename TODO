Now:
- exec for if/for/switch/call
- implement builtin functions / user provided functions
- print directives (html escaping by default)
- use a struct rather than a map / docs for expected data structures
- Globals
- {msg}
- {log}
- {let}
- {literal}
- {debugger}
- {css}
- {alias}
- attributes for all the commands
- Source location / error messages
- test coverage
--- v1
- parsepasses (optimizations) (Simplify, CombineConsecutiveRawText, Prerender)
- Contextual autoescape
- Delegates (delpackage, delcall, deltemplate)
- Injected data
- Bidi
- Message extractor
- CSS renaming
- generate Go code for template


Issues:
- How are escape sequences handled within strings? e.g. 'string\nvalue' or desc="hello\nworld"
- replace reflect.Value usage with own types.  or figure out solution for drilling through interface/ptr)
